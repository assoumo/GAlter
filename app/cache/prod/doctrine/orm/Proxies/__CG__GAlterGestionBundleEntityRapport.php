<?php

namespace Proxies\__CG__\GAlter\GestionBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Rapport extends \GAlter\GestionBundle\Entity\Rapport implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'id', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'etudiant', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'remarque', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'periodedebut', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'textaudit', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'periodefin', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'date', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'contenu');
        }

        return array('__isInitialized__', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'id', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'etudiant', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'remarque', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'periodedebut', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'textaudit', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'periodefin', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'date', '' . "\0" . 'GAlter\\GestionBundle\\Entity\\Rapport' . "\0" . 'contenu');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Rapport $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setDate($date)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDate', array($date));

        return parent::setDate($date);
    }

    /**
     * {@inheritDoc}
     */
    public function getDate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDate', array());

        return parent::getDate();
    }

    /**
     * {@inheritDoc}
     */
    public function setContenu($contenu)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setContenu', array($contenu));

        return parent::setContenu($contenu);
    }

    /**
     * {@inheritDoc}
     */
    public function getContenu()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getContenu', array());

        return parent::getContenu();
    }

    /**
     * {@inheritDoc}
     */
    public function setEtudiant(\GAlter\UserBundle\Entity\Etudiant $etudiant = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEtudiant', array($etudiant));

        return parent::setEtudiant($etudiant);
    }

    /**
     * {@inheritDoc}
     */
    public function getEtudiant()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEtudiant', array());

        return parent::getEtudiant();
    }

    /**
     * {@inheritDoc}
     */
    public function addRemarque(\GAlter\GestionBundle\Entity\RemarqueTuteurRapport $remarque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addRemarque', array($remarque));

        return parent::addRemarque($remarque);
    }

    /**
     * {@inheritDoc}
     */
    public function removeRemarque(\GAlter\GestionBundle\Entity\RemarqueTuteurRapport $remarque)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeRemarque', array($remarque));

        return parent::removeRemarque($remarque);
    }

    /**
     * {@inheritDoc}
     */
    public function getRemarque()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRemarque', array());

        return parent::getRemarque();
    }

    /**
     * {@inheritDoc}
     */
    public function setAudit(\GAlter\GestionBundle\Entity\Audit $audit = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAudit', array($audit));

        return parent::setAudit($audit);
    }

    /**
     * {@inheritDoc}
     */
    public function getAudit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAudit', array());

        return parent::getAudit();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeriodedebut($periodedebut)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeriodedebut', array($periodedebut));

        return parent::setPeriodedebut($periodedebut);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriodedebut()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriodedebut', array());

        return parent::getPeriodedebut();
    }

    /**
     * {@inheritDoc}
     */
    public function setPeriodefin($periodefin)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPeriodefin', array($periodefin));

        return parent::setPeriodefin($periodefin);
    }

    /**
     * {@inheritDoc}
     */
    public function getPeriodefin()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPeriodefin', array());

        return parent::getPeriodefin();
    }

    /**
     * {@inheritDoc}
     */
    public function settoCurrentdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'settoCurrentdate', array());

        return parent::settoCurrentdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setvisibilite()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setvisibilite', array());

        return parent::setvisibilite();
    }

    /**
     * {@inheritDoc}
     */
    public function setTextaudit($textaudit)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTextaudit', array($textaudit));

        return parent::setTextaudit($textaudit);
    }

    /**
     * {@inheritDoc}
     */
    public function getTextaudit()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTextaudit', array());

        return parent::getTextaudit();
    }

    /**
     * {@inheritDoc}
     */
    public function rapportParAnnee($annee, $etudiant)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'rapportParAnnee', array($annee, $etudiant));

        return parent::rapportParAnnee($annee, $etudiant);
    }

}
